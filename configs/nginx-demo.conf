server {
    listen 80;
    server_name _;
    root /var/www/nginx-demo;
    index index.html index.htm;
    
    # Log dosyaları
    access_log /var/log/nginx/nginx-demo-access.log;
    error_log /var/log/nginx/nginx-demo-error.log;
    
    # Gzip sıkıştırma
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    
    # Güvenlik başlıkları
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';" always;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=login:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;
    
    location / {
        try_files $uri $uri/ =404;
    }
    
    # Rate limiting uygulaması
    location /login {
        limit_req zone=login burst=5 nodelay;
        try_files $uri $uri/ =404;
    }
    
    location /api/ {
        limit_req zone=api burst=10 nodelay;
        try_files $uri $uri/ =404;
    }
    
    # Statik dosyalar için cache
    location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options "nosniff" always;
    }
    
    # Zararlı dosya uzantılarını engelle
    location ~* \.(php|php3|php4|php5|phtml|pl|py|jsp|asp|sh|cgi)$ {
        deny all;
        return 404;
    }
    
    # Gizli dosyaları engelle
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Backup dosyalarını engelle
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # HTTP metodlarını kısıtla
    if ($request_method !~ ^(GET|HEAD|POST|OPTIONS)$) {
        return 444;
    }
    
    # User-Agent kontrolü (bot trafiğini sınırla)
    if ($http_user_agent ~* (curl|wget|python|bot|spider|crawler)) {
        return 403;
    }
    
    # Hata sayfaları
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    # 404 hata sayfası
    location = /404.html {
        internal;
        root /var/www/nginx-demo;
    }
    
    # 50x hata sayfası
    location = /50x.html {
        internal;
        root /var/www/nginx-demo;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Status endpoint (sadece localhost)
    location /status {
        allow 127.0.0.1;
        allow ::1;
        deny all;
        
        stub_status on;
        access_log off;
    }
}
